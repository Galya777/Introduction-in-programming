#include <iostream>
#include <time.h>
using namespace std;
const int MAX_SIZE =1000;
void swap(int arr[], unsigned i, unsigned j)
{
	if (i != j) {
		int t = arr[i];
		arr[i] = arr[j];
		arr[j] = t;
	}
}unsigned minFrom(int array[], unsigned from, unsigned to)
{
	unsigned min = from;
	for (unsigned i = from + 1; i < to; ++i) {
		if (array[i] < array[min])
			min = i;
	}
	return min;
}unsigned readSize()
	{
		unsigned n;
		do {
			cout << "N = ";
			cin >> n;
		} while (n == 0 || n > MAX_SIZE);
		return n;
	}
void readArray(int array[], unsigned size)
	{
		for (unsigned i = 0; i < size; ++i) {
			cin >> array[i];
		}
	}
void generateArray(int array[], unsigned size, int max)
{
	static bool inited;
	if (!inited) {
		inited = true;
		srand(time(0));
	}

	for (unsigned i = 0; i < size; ++i) {
		array[i] = rand() % max * (rand() % 2 ? 1 : -1);
	}
}

void printArray(int array[], unsigned size)
{
	for (unsigned i = 0; i < size; ++i) {
		cout << array[i] << " ";
	}
	cout << endl;
}
void insertSorted(int array[], int x, unsigned size)
{
	int i = size;
	while (i > 0 && array[i - 1] > x) {
		array[i] = array[i - 1];
		--i;
	}
	array[i] = x;
}
void insertionSort(int arr[],unsigned size) {
	for (unsigned i = 1; i < size; ++i) {
		insertSorted(arr, arr[i], i);
	}
}
int main()
{
	int array[MAX_SIZE];
	unsigned n = readSize();

	readArray(array, n);
	//generateArray(array, n);
	insertionSort(array, n);
	printArray(array, n);

	return 0;
}
