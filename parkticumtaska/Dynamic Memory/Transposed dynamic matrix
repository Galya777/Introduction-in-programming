#include <iostream>
using namespace std;
int** MAtrix(int m, int n) {
	int** matrix = new (nothrow) int* [m];
	for (int i = 0; i < n; ++i) {
		matrix[i] = new (nothrow)int[n];
	}
	return matrix;
}void readMatrix(int** matrix, int m, int n)
{
	for (int i = 0; i < m; ++i)
	{
		for (int j = 0; j < n; ++j)
		{
			std::cin >> matrix[i][j];
		}
	}
}void printTranspose(int** matrix, int m, int n)
{
	for (int i = 0; i < n; ++i)
	{
		for (int j = 0; j < m; ++j)
		{
			std::cout << matrix[j][i] << ' ';
		}
		std::cout << std::endl;
	}
}
void freeMatrix(int** matrix, int m, int n)
{
	for (int i = 0; i < m; ++i)
	{
		delete[] matrix[i];
	}

	delete[] matrix;
}

int main(int argc, char const* argv[])
{
	int m, n;
	std::cin >> m >> n;
	int** matrix = MAtrix(m, n);
	if (!matrix) {
		return 1;
	}
	readMatrix(matrix, m, n);
	printTranspose(matrix, m, n);
	freeMatrix(matrix, m, n);
	return 0;
}
